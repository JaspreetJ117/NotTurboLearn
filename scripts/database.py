import sqlite3
import os
from pathlib import Path

DATABASE_FILE = './data/turbonotes.db'
db_path = Path(DATABASE_FILE)
db_path.parent.mkdir(parents=True, exist_ok=True)

print(f"Directory '{db_path.parent}' is ready.")

def init_db():
    """
    Initializes the SQLite database and creates the necessary tables
    if the database file does not already exist.
    """
    if os.path.exists(DATABASE_FILE):
        print("Database already exists. Skipping initialization.")
        return

    print(f"Creating a new database: {DATABASE_FILE}")
    
    try:
        conn = sqlite3.connect(DATABASE_FILE)
        cursor = conn.cursor()

        # Table for transcripts and original filenames
        cursor.execute('''
            CREATE TABLE transcripts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                filename TEXT NOT NULL,
                transcript_text TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')

        # Table for the notes generated by the AI
        cursor.execute('''
            CREATE TABLE notes (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                transcript_id INTEGER NOT NULL,
                notes_text TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (transcript_id) REFERENCES transcripts (id)
            )
        ''')

        # Table to store the chat history for each session
        cursor.execute('''
            CREATE TABLE chat_history (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                transcript_id INTEGER NOT NULL,
                sender TEXT NOT NULL CHECK(sender IN ('user', 'ai')),
                message TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (transcript_id) REFERENCES transcripts (id)
            )
        ''')

        conn.commit()
        print("Database and tables created successfully.")
    
    except sqlite3.Error as e:
        print(f"Database error: {e}")
    finally:
        if conn:
            conn.close()

if __name__ == '__main__':
    # Allows running this script directly to create the database
    init_db()