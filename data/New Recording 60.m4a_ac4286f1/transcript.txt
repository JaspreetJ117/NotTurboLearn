 So I closed the summer number one. You can see all my new space here. So now I have some of the same new rules for summer number one. For the new one, I usually want to close in here. And so the new date will be ten days from here to here. And then as you can see, you can go from content. And then the summer rules. Then that's your assignments. You can download here. That's about introduction. This gives you briefly introduce you what is PLP function, how do you use it to find the moment, giving the rate and the loan. The loan actually is present value as to its PLP. And also if you read this and you understand what that mean, then you can do a lot of things here. Now this is introduction. We doing the PMT function to find the monthly payment for the mortgage. And you can do two ways. One is, as I have here, just use Excel PMT function. That function is very easy. Just like that. Just write equal, type this equation. And then type this Excel given equation, PLP, and the rate and so on. And now next is, so that's kind of in this assignment, this assignment is just to give you, ask you to perform how to type the Excel given functions. And next is, in reality, Excel may not give you equations as much. You may have your own model. So that's the second method here. As you can see here. You can use this equation. That's the equation. So that means when you input, when you write a number, then you need to use this instead of just use PMT and then you input numbers. Now you just need to put everything in here. But it's okay like this. It's not too hard. But these rate PB and then PER and R given equations, and so you can find to meet these given conditions, you should get exactly the same answer. And so you can use these two methods. So in your assignment, I do have the answer. So in your assignment, I do have this step one, two, three, four, five. And originally, previous year, I did not have the steps. I just had a description. Now I thought maybe it's easier for you guys to understand one, two, three, and down. So you just follow these steps, then to do the work. Then, and rubrics. Here. Rubrics is here. So you know which steps you will come in for. So this is part A. I have part A and part B. So I took parts. Now also I have these. I post these. That's what I do. My results there. So you can follow just the results. So you should double check if you use the same number. You can just use the same number so I can check. Exactly the same. And then you can get the answer. So that's for part A. And part B in the following page. On the following page, you will see it's just like an easy equation. You two get the same. And remember, also you need to graph. So that's about your assignment, A1. And your A2 will be, I think it's still far away from now. By A2, you will write, I believe one of the parts, part A, will be part A. Only a few points. You will write the VBA code to do everything here. Here now, part two is doing math. You just need to do math to do everything. So from there, you know how to do math, right? Then, as I said, in your assignment, you will write code to do this. So the same thing, you can do different ways. Okay. And that's about your assignment information. Do you have any questions? Yeah, I think you need to do both. That one. You're working. I just want to say. I already have this assignment. I did not give you anything. Like it's still far away from now to the question. This. The question about the second part and the second part. The second part, yes. Doing the same thing. Part B, right? Use math. Math. You just do this. I have the instruction, you just do the same. But you record it. The second part is using math. The first. The first. Paray? Yes. You examine manually. Manually. Paray is manually. You do the same. Part B is math or automatic. Never mind. It's fucking hard. You record your process. Then you create a button. Control button. It's a lot of work. I'm not even like committed from here. Change the channel. So you see here. This is part A. Part A. So I have all the instructions asking you to change everything. Like including this. And part A is for PMP function. But you're doing manually everything. And part B is you are going to do math. And in the article, so you will know, you have to use this. You have to record the macro, right? Then after you do everything, then you stop. Then you want to create this. Control button. And so. This is a big, big, big. Everything you've got. For example, I'm going to. Also, you want to test your result. I don't know anything. But now. I mean, two. I mean, two things. You'll get everything there. That's automation. Yeah. Right? So you need to submit the excel. XLSM. That's micro enabled. Right. If you just use XLS, then. That's what I see in part two. But when you have part one. You know this one. When you have the. Part one has 12 points. Part B has 8 points. And you should have 30 points. Right? Any questions? Just remember your part. Part A is manual. Part B. Between the automation. You got to go by the order of control. Okay. That's like their version. Well, you updated it. Okay. So. All right. Let's go. Start. Okay. Let's go. Do they want it? Do they want it? Did it give you an idea? They want it. Yeah, they bought it. Now, you can see. We're getting to the right immediate. So. So it's having a hard. Well. You don't write code. You got to know the control. Will you use the code? Oh, you went through his article. Okay. So in this chapter, you still have a lot of content. I can do more faculty. You know what I'm doing? I'm going to do the application. That was what I was ever going to do. I'm just going to do the entry here. And once you're listening, going to be artist. It's like a worksheet, a workbook. They can include the art. The art and you are in the defined argument. Define a, are declared these workbook or worksheet. So next time it's easy for us to refer to the workbook or worksheet. And for sheet name, code name, when you write a big code, some people have to use this. And feeling constant. And feeling constant. When you move a mouse up and down, this will respond to it. The feeling constant. And also make in a message box, you can see OK button. OK, like this button. These all using building, maybe it will be constant. It doesn't write. So you're working different information. And also you can do input box or message box. And by using the code. Streams. That's a very important thing. And building stream functions. A lot of times you need to replace, you find some character along the streams. And you want to replace, you want to delete. Delete is such a pile of names. And this is you need to search. You need to search a character. So you can use these building functions on the stream. And also you have the medical functions. And even when it's medical functions, specifically in here also, you have the square root of sine and cosine. And I want to say we do have excel functions. And as you say, PNT function is well felt. And also how is your sound. And there are a little bit difference only in the fuses. A minor difference between the VBA and excel functions. For example, square root SQRT in excel function. Excel means use the spreadsheet into the things. Maybe if you write that, it doesn't reply to you. And it will give you error. It's SQRT. And also like arctangent. So I will give the information. And with a general amount of R, many R functions in excel, we can take advantage of excel functions, PNT functions. We can use them. We can go larger. You can even create it. But you still can use it. So that's inside of here we will talk about that. And we specify object. And this is really we want to do something here. How to write. So how to finish this chapter. We will be able to write it. Not for the excel mode. But later on we will do the control groups and the VE groups. In the logic sense. And then following chapter. And then following chapter will do the arrays. Right? Then functions, some routines, call, many type of call. And routines. Right? And so on. But now this is getting started. Once we've done this, you're all done. Okay. Now let's move to the next. So the subgroup team, we all know you already have the experience. And a program. Program is a big thing in the law. Law 432. Or subs. Many call subs as a being one. And subgroup team. So we're going to install some VBA interface. VBA. And install the module. As you can recall in the last chapter we said we use insert. And insert. And it will insert module. The full module. And also use a form from there. And so that's in the modules. That's where we see the code. Where we access the code. And so what we want to do is we click development and it goes to. Oh, this is for if you don't have development. As we mentioned earlier. We mentioned in the last chapter. And you can go with this, right? We mentioned from last chapter. This one is not by default you have that. You have. If you don't have this, you can. No worries. It's all here. By all means. Choose option. Choose customer reason. And check. Because then it will be here. And now here you can see. See the base module. And. And I see analog. And now. To do your control button. Your assignment. You use here. Insert. Click this insert. Then you will see that you can change the box. That's control box. Right? And. And then. Click on the. Well, it will be. Basic. Then the editor. Window will pop up. And that's. So now. For this one. You need to know. What. The three of the things. Are most important. And these. This. Project is for. That's. That's right. It just over you what you have. And so. What you have. That's what I have. And what you have inside. What you have. But. Then. And going down. If you have. If you have. The module. It will show. Okay. And then. Optic windows. Is here. This is for. Browser. Objective browser. So you want familiar with. These. Things. Now. Now this is the. Excel VBA. This. Editor window. So these are the bars. Here this is typo bar. Is here. The file you have. And. The manual bar is here. And. Now. If you want to write a video code. First thing you want to do is. Then the module will show up. And that's the module. That's the module. Where. You can hold. All the code. All. Of course you can. This kind of. You know. One. Full. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. Of. I have assignment. Not. Let's say. I have assignment two. I have two parts. Of your work. Part A and part B. I might ask you. Don't. Don't put together. Because if you don't put together. Put together now. If I encode or chuck, then it's mixed. So you might need to insert module. And by default, it's module one. Then you want to change the name by doing here. Because this is the property. If you click this and right-click key, it will show the property windows. Then you can change the name to my name. I'll say part A. The next one, you create another insert, another module. Then you start to add part B. Then in part A, you just put all your code in part A, part B, all your code in part E. Right? So don't put it together. Right? So now let's add a code with this. The code with this here. Just click this. Then you're showing these windows. And then you just write a code. Now, video, the tool. So now, where is the tool box? Tool box is this one, and standard, and robot editor. And this one is debugging. And debug. And the robot editor. So you notice, like indent, then comment, and uncomment, all these. And here, I must have these windows for watching what's going on inside. OK. So if you don't see these, you can also use view, owner, and click here. You're showing the property view. It's here. And the project window is the project voice. And the property window is this one. So project is called property window. Then next, this is property window. Then immediate window is this one. And it's very fun, this one. With the key, the red key. And the loophole would be this one. This one would be watching. Loophole, loophole, loophole. And watching with glasses. And so these are from the back. You see what's going on inside the short code. And it might be in the box, the short code, the brick code. So brick code is on here, all the way side, all the way here. And now, what about some of the names? Names. The names can be a combination of several words. You don't want to have space or spatial to have it, except on the score. On the score is O, G, K. And then sub-t names. And you have these, sub, and there is the names, sub, and there is the space. And N is this. Always have N. And you can take arguments. For now, for this chapter, next chapter, we don't take any argument. This new how we go. The routines, you have input, output. You can't, next time if you want to call, you have input. And you have get out, results. And input and output, you can put inside. But for now, we don't have it. We just put everything inside. So we just write this empty. And that is it. Just leave it as empty. So here, module. And module, as I said, module inside can include many of them. Many points of group. Then next is, how she explains it. We need to use this usually. And it looks like we need to use this. This is the typical example that always on top, it's actually placed on top. And that's the first. So if I ask you, what does this mean? It really means it force you to declare these variables. Because sometimes if you don't close, you will probably forgot to be right. Hold. And this is just to give you. If you don't, they will be in a wrong condition. If you don't, you declare your variable. So that's, it force us to declare a variable. Right? Right? Now, that's the way you see it. Always on the top. How do you do this automatically when you write a code? It's here. It goes towards the editor. From the editor, you have towards option, then you see here, towards option, then you click here, edit. So you apply a variable to clear the region. And now, once you have this checked, you automatically clear it. You don't need to write a message by your own. Because you don't want to write everything by your own, by yourself, right? And on here, also, you can see we've thought it. And it's so nice, because you couldn't write it in your windows. And here, you click on, and you can draw it. And all on top of it, for different variables. Right? This, sometimes, you only use it if you couldn't write it in your windows. Right? Right? Now, next. Verbal. A verbal, we need to use verbal. It's really important to store information. Right? And now, how do we, what, how many types of them are? And how many types of them are, for an integer? And for the integer, the only thing you use, if I can, in being, I, as integer. And I only hold the number of bits. This is really not a big number. Right? So, sometimes, you need to use this, now. Like, if you have a large number, but for it, you can imagine the integer again is huge. Right? So, in that case, you cannot hold any more than this, at all. Okay? Right? And that's it. It's not an integer, and that means what? Single or double. For a given, I can't see them. And a single or double. A double, we know, but I guess, sometimes, we use the separate digits, what we call it, company. And that means, after the decimal. And next, is the string. The string is the big cities. Right? We have to clear a character, or a sentence, with the string. And then, this one is very important. Bully. Sometimes, we need to find if it's true, or if it's false. So, if you have a bully, you can declare a bully variable. Right? And then, currency, date, and finally, and we have variant. Variant is defined variable as, it can catch the whole. Then, if it can serves as, if your data is integer, it serves as an integer. So, whatever, it's just so flexible. It can hold any types of data. Hold any types of data. And you can really determine if any type of data according to what you have. OK? And normally, it's really fun. You don't really want to use that often, because it's less efficient. So, you don't want to use that often, because it's less efficient. So, these are the variables. Now, that's how we declare. How do we declare the deem, j, as? So, you can see, we must start from deem, then as. And change your variable as what variable type. So, that must be this deem. That must be this deem, as. Deem. And now, if I have deem i, j, k, all three of them, all integers, then you have to deem everything. See here? From i to j, and from to k. And you can put one line by line. And all you can put on the one line is a complex. And now, if I write in this deem, it does seem as this. Two. And so, this two means this only has k as integer. And so, if you have to declare i, j, you really do not declare as anything. So, that really is a variant. For a self-adjective, think about it. It's a variant, not an integer. And so, that's the difference here. If you don't have that. So, that means, if you don't do this, you cannot omit the as integer. You have to put everything here. All right? Now, that's the same. You want to be careful. And we can always use intelligence. And intelligence just use control space. Then it can shoot. If you use control space, then it will shoot all of these properties, and that's the other things, and the names, and so, if I try, for example, I have these. If you declare, if you declare the degree to the radian, this is going to be long. And now, if you declare it will shoot here, you use the control on space. And it will shoot whenever you just type three words, three words, it will shoot here. So, that's the space. That's the space, and then you'll be good. You don't need to type all. How do you declare constant? You declare constant is constant to what? Three. That's the format of, you declare constant. Next. And object variable. And object variable refers to the work of, and all these things. And so, when we declare the achieve, or range, or, we can declare range. And this way, it is convenient, convenient for us to refer it either, right? Otherwise, we have to write long things, right? And so, it was still on the reference, but it's not just, it isn't referred to the image itself, only refers to object. So, we can also do this, but, but, and, object, declare object is different with this declare variable. Okay? Declare variable, you know, is variable. It's a number, so only one, right? And this, and then object might be special, and then what is the advantage of this? You have to set. Okay, that's the key thing. After you've done this set, you will have long, you will have long, and long, and long, and long, and long, and long, and long, and long. And that will give you the syntax error, as you can see here. But in range as range, RNG as range. And the reason we cannot use reserved word, and for here, so now, And meaning also belittled as range. And set, so here set, range is equal to what? So what starting with this? And then this, you see here, what sheet? So this refers to what? The what sheet named method, what? You have to use this double quotes. And then dot, range. And also you have to use these double quotes. This is a double quote. And that refers to the range. Then also you can do the what sheets. What sheets as in set, what sheet? Equal to what? You see here now, what sheets? And what sheets? And that refers to the name of the what sheet. And this is the spreadsheet. Great. Now next is objects and collections. And so if you look at here, when you see here sheets, right, when you see here work sheets, if you write a worksheet, does it work? No. Wrong. Because it only refers to this worksheet's collection with the name of that. So that's, you need to use these collections here. But first, these work sheets, sheets collection, is a natural one. Because seeing your spreadsheet and the new itself, I know you can do the charts. And you can insert charts. You can insert what sheets, right? The sheets include charts and work sheets. You know what I mean? This is a large one. You can hold, focus. And then what sheets is, when you use this, this is just a simple worksheet. And what sheets is collection of including the all work sheets including in workbook. Now next one, and charts. Charts refers to that single chart. Just like this means a single worksheet. This refers to a collection. When you have plural S, then that's collection. Then there are these rules. Reserve the keyword, and you need this object. Name is cannot be used. That makes sense, right? Because this is reserved. Right? And they start with a letter. They start with a letter. And no space. And no spatial property. And except on the scoreboard. Except on the scoreboard. And also case and in sensitivity. In sensitivity. And I mean that's your verbal name in case in sensitivity. Just follow the first. When you do the declared, right? And just in the declared, you use capital word. Then next time you write lowercase. Now it will automatically change into the capital word. Just follow the first time you use. That makes sense, right? And now I have a few examples. Now we cannot use these because this is a strategist number. And we cannot use because you have space. Input. Input cannot use because see? We cannot use input. We cannot use pivot table. We cannot use for. We cannot use next. These keywords cannot use. And then I want to ask them what would be the best practice? Best practice. And you want to use meaningful. Meaningful. Like what sheet? Right? And you see you can use the work sheet. Work sheet. Right? Pivot table. You can use Pt. Pivot table. Right? You can use pivot table one, pivot table two, Pt one, Pt two. Or work sheets one. Ws one, Ws two, and so on. Right? But that's how we say meaningful. Now next is work sheet name. As you just now have viewed, we want to say certain range. In a certain range of parameter, you need to have work sheets and then princesses. Then you use double quotes inside names. Right? That names refers to this. What do I have is this refers to my Excel file bottom. Bottom. And bottom bar, as you can see here, this refers to I have three worksheets here. Where is each name by this? Right? If you look at the first time work worksheet, it by default give you sheets one. Then you click another one. You use this to insert another new worksheet if it all gives you what? Sheets two. And so on by default. But you want to tend to your own name. You don't want to use the default name. For example, I want to have an EDA or macro. Right? Then for your assignments, you want to use those micro and others give. So on. So this refers to work sheet name. Now I also have what? Coding. Because now you write EDA code. And sometimes if you don't want to use the same bar, because you do first worksheet and you need to use work sheets. It's just inside the code name. Right? It's kind of long. And you can use coding names. And how do you tend to this worksheet name? You can click worksheet name. Highlight this worksheet. When you click means active, convicted, controllable. When you click on this worksheet in the product, it's full. Then you can't click the property window. You can change the name. Or you can change that by here. Just click here and right side click key or here. And it has a rename. You can rename there. You can do both way in the review code. Or you can even in the review code. You can do different ways to change the name. And this is referred to worksheet tab. What you have. And that's the worksheet name. Now we go here. What do we have? And these, as you can see here, what do you see here? This is the product that is full. And this is here? 1, 2, 3. So now you can see. We have three works here. And what you see on the right side. You can see here. So the right side is what she did. And on the left side, now you see this is the same as that. If we don't change this, it will be the same as here. She's too confused. And. And on the right side is code V. And code V means if you want to say this worksheet, you can just use this. And you can just use she's one. And to represent that she's one with name of this, that's a code name. And code name, also you can change the code name. And from the pocket windows. And now. So as you can see here, what she's doing. Now how do you change the code name? You can change this code name. It's here. You click. Click on here. Click on this. See. Then the pocket window will pop. Then that's the window pop here. And that's the name here. You can change it. If currently she's three, then you just write VBA, code name. We didn't code the name yet. So. So you click on here. And then wait for it. If it doesn't show in this, you can always click the pocket window that you want to show. So you can change it from here. And that's how we can change this. And so now, you have two names to specify what she's. You can specify with code name. And code name can be changed in pocket windows. And what she's needs, then you can change it from the worksheet pop on the work sheets there on the pop. Not here. Not here. Because the spreadsheet is water. Right click. And change. So that's what we have for the worksheet. Now, let's build in function. Building constant. And building constant are really useful and save us time. And you have a lot of them. And the dialog box, message box, and the input box. These are dialog box. And they'll be OK. And as long as you get these up, the constant and the border, you can also control the border of your cell or bench on five meters. Then also, you can control the color. And so navigation, as I was saying, if you want to select, if you want to do something, you can select a bench. You can pocket first to select one cell. Then you use mouse to right side and down. Right? That's what you can do here. When you use the sorting, the sorting one, then you sort and you are going to get this. And so it's all the S1 alignment. And that's alignment is for format. If I have so many later here, I want to align them in the center. And then that's the center. It's like that. It's still right. It's still top, bottom. And so on. And how do we test copy paste? As I mentioned, you need to paste values. You need a lot of volume, so you need to do this. Unless you paste the volume and so on. And pivot table. These are the four pivot table constants, which are very useful. We talked about after 15. And we would use these. And so we will say how to ascend in quality here. So these constants are very useful. Now, this is building functions. Just now, it's building constant. I have building function. And building function, we have message box and we interact with user. And first, we're going to talk about message box. So message box. And as you can see here, you can use this message box and prompt, buttons, title. And the title means the box. What is the title? Button means it's OK or cancel. OK, cancel, different options. But you only need these. It's required because you are going to pop up what you want. These are the options. And you can do with this solo. And you can without this. Without, it's still OK. But in this is the case, the result returned. You can see here. Sometimes we want to see maybe we give the message box. If the message box has OK, cancel, or ignore different selection, different results, we want to see how user respond. So that means you need to know the results. And so that means you need to know the return. In that case, and here this case is just one of these three results. You don't care about how they reply. Here is, and I wanted to see, what do they reply? Do they click OK or do they click cancel? And so you want to have something here equal to what? And in this case, this is how to. You have to put it in this case. You might. Maybe you need to have this. But now, you want to see what would be the response? How do I know? And click OK. Will that give the answer OK? Or cancel? No, actually, they use constant number to express that. And so that's the reason now when you do this, you see here we have an integer value instead of saying that it's really an integer. So in here, when you use results, you have to declare results as integers, right? Because you expect to have an integer returned, right? Because you have to match both. If you don't know, then it just means alert. Right? In that case. OK. So these are the statements you can find out because all teachers have OK, OK, cancel. And these are the options you can use. Now, a different answer corresponds to a different response. We got here. That's the value. If you click on OK, then it just gives you what? So let's say the return. Right? So for message box, without return, you don't need to have the princesses. But if you have and then you do the return states. Right? So now, next, you can see here. This is a simple example. Declare output as integer. Now, for example, these. Now, because I wanted to have return, right? So message box of these. You are. So this will show the shoe here. And this prompt and buttons and the title. And if this is the sixth, then great. And sixth corresponds, yes. Then it will prompt this. Otherwise, it will say, you are just not expert. And then, eval.print. Eval.print. Eval.print. Vpy.yes. Vpy.yes. Vpy.yes is a number, right? I will use processes from previous slides. Right? So in what shoe in what window, when I have these, what does that mean? Eval.print. In what shoe in what? Where? You see that. Ones. Yes, in which shoe, one center. But in what shoe, whenever you see eval.print, in what shoe in immediate, when not? Smalls. Immediate window. Immediate window. You have the default methods by what shoe in the video. OK. And so, in some of these. And so whenever you execute this, they will show you here, right? And five more. And a button. A little button, and this is prompt. And if you answer yes, it will go in this. It will go in no, it will go in this. Just here, you can see. Now, if you see here, you don't have these. Right? Empty, leave empty for the buttons. If you have empty, by default, it will just give you OK. You just OK. You see here? But here you have maybe yes, no. Means you have yes, no, two buttons. So different buttons is different. And if you're OK, you can ignore, you can't wait, but just leave empty space here. Right? And eval.print, it will show you. When I say here eval.print, you're going to ignore it in the prompt. But you need to use the S of that. Right? And that is this. When you have the blocks, you also can show the, you can also use this. You see here, maybe yes, no. Plus expression. You can plus exclamation, make reverse sign, make question sign, make exclamation, evalation. So you can get more resourceful. And you can use this plus to show you two different icons in your message box. And now, when I say next is, if I write a long sentence, what can I do with this? Sometimes I look up the message and I always name it or feel it. It's a long one. Then you need to work. You always use this type of space followed by an underscroll. You see here? This one is a speech, this is an underscroll. So that corresponds to one sentence. Right? As you execute space, underscroll. You use this to look for the next line. And here. All right? So that's how you break a sentence. Now, so we just learned the message box. The message box, M-S-T-P-O-S. The message box. Next is input box. Input box. Just use input box. Now, as you see here, input box normally refers to you want as a user. Because you want to let a user to do input. When I say, what's your name? What's your name? You're appearing in the front. What's your name, right? So you want to get information. That means you need to have a return, right? And to prompt the type of default, by looking for the default value. These are the options that we've compiled. And so because it has a return, you do need to have a parenthesis. Now, also, by default, it returns a string value. To this my value. Right? And now, that's how we write here. For example, I have these input box. Enter the name, then the name. This is title, and the input box. Message box, title. And here's the message box. You see here? Enter name. And you see here, title. So on the top, always, like here, is prompt into your family name by default, like here. Wait. This might be a bit big. And so that's how we have. And this, after you go here, and after you do this, then you're going to have this string information given to my family. That's how you get the resource of information. Right? So I call a prompt default value. If you don't put a default value, then it will leave empty. Then what if, as we said, it will return the value input and there, and you have to match, right? And on the left, my value, and that type will see it as the right side returned. So I want to use to declare this as a string. It has to return a string information. Now, what if you don't know? For the data, I want to put a data not string. And you can put here, my value as a parent, such that it will give you if this data is an integer, it will give you an integer. Right? And now, without showing the title, you see here, leave empty in the middle. So here, all the issues will be solved. Microsoft will be solved. And what if I have these? But if you don't have this default option, you just don't need that. So you may have two, you don't have three. So that's how you do the input box. OK? Then next, and format functions, and format functions. Format functions. And we have format as if you click the sale on the right side, you can see format for sale. And custom is available types you can do in here. So how do we do that? These are the options. How do we do that? We can do it in this way. Format. So that's format. Is it here? This is the number. I want it to format this number. But if you don't have this number, you have variable. That's OK, right? Because you hold the numbers. Then you have these. That's the number, by double quote. That's the type of here. And this here, this is for custom, but also here, for numbering, you have two digits. And we have different digits. Right? And so that's the sentence you can do. And then the percentage of my here, we have the percentage of. And these are for the year old. And also we can do for the date. Right? Different options we can do here. You see here, I have debug.print. And then that results will show just a VBA edge window. And then you will see the results. The result is final. And you can debug. All right. And next is the string. And strings. Strings. Strings, when we declare, it just string, and message is equal to this. Then we can use this variable name for the message box. Right? The message box, if you look here, did I use the princesses? No, I didn't. Because of what? I don't want to return. I don't need to return. If you don't need to return, you don't need to have that princesses. So the result will be the Christmas box for this year. Hello. Hello, which is here. Hi. And here is prompt. Prompt is here. And that's OK. Now, if you want, I want to say more. We have two explanations. And it's Amazon. So if I say, OK, I want to have this message. I want to cry. You guys, on your course instruction, so cry, you guys. But in the future, you need to use the space to separate, to separate. Right? So you just use this. It's Amazon. Right. So that's how you connect. Incarnate. Your strings is Amazon. And that's it. That's how you do. And now, the message box is showing this. Then next. And this one is the two important things here now. For the string functions, because we really need to do the strings a lot. You want to take the strings, take the information about the strings. So really, and you have left and the right. Is this string. You're starting from the left. You want to take five letters. See here. You want to start from right side taking five. Right. So you have two strings. And how many right? The left. And then on the middle, it means you don't need to take from the first left or right. You have to take from this middle part. The string. Start. Start from number three. One, two, three. So you start from three. Take five. That's how you have. And how long is the string? That's one, two, three, four, five. How long? And then you case. So you know, up case. Lower case. Up, lower. Somebody you want to uniform. You want everything to be the same. A lot of cases you can replace. A lot of cases you can replace. For example, this is a region on the string. I want to replace. I want to delete actually this one. So I can replace this, the character in which you want double quote together. So that means I want to delete that. Right. This is empty. But if you have double quote and have a space, then it becomes A, space B. Right. So that's how you do it. Here now I don't have anything. And then so on. And also you can find the spatial character's position. You can return the position. So by this, all return for the character. Now is for the position. And then where is the spatial character position? So that's which position you want to start your spatial. And that's where it means you start it from here. When you go to the fourth fight, you see this one. If you don't have that, that's terrible. And some of these are also useful. You can cast them here. That's what is spring. That's what is spring. Well, that's all for today. So today we learned a lot. I'll continue in the next. So see you guys next week.