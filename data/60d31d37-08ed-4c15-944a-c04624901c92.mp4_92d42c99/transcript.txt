 Remember, this goes again, if I want to store 11 in the computer using the two component vectors, this is 11. If I want to store minus 11 in the computer, to do some subtraction relation, then what I have to do is I have to store one component for 11, zero, zero, one, zero, and then I have four ones. This is the one's component, right? Change the one, then zero, zero, zero, one. Then I add one to it, then this will be negative 11. Then this is how I store negative 11. I don't have minus 11, I have 13 plus minus 11. I have 13 plus the two component of 11. So what is 13? This is 12, this is 13, good for zeros here, and then plus minus 11. This is minus 11, but still I'm doing plus operations. So this one plus one equals zero, and I have a kind one. One plus one equals zero. I have a mistake, I don't know where the mistake is. So let me go again. This is 17, yes. This is zero, zero, one, zero, one, one, one, add one, and this would be one, zero, one, one, one, okay? Now, is this zero? One plus one equals zero, I have a kind one, but this would be one. Why? Just give me a second. This is 11. This is 11, yes. Oh, this is zero here. This one is here, right? So I have here one, zero, one. Zero, I have a kind one, zero, zero, zero, zero, one. What is this result? This curve is carrying. So I'm just going to just carry. Okay? And the result is two. The result is two. 13 minus 11 is two. So 13 plus minus 11. 13 plus minus 11. This was minus two, and I wrote it. So this is why we use the two's curve. Okay, but what is our goal today? Our goal today is to deal with large numbers. When I deal with large numbers, the easiest way is to use the power. Let us talk about the distance. If I want to say the distance from the Earth to the Sun, I think it is like this range. I don't remember, but suppose it is three times 10 to the power 12 perimeter, the distance. So now I'm talking about large distance. How can I talk about large distance and discuss it in the computer? One way to think about it is in this case, I only need to store this number and this number. Right? I can use one byte for this number and one byte for this number. So I can store very large numbers. But if I want to store also very small numbers, then I can, instead of store this number directly, I will add 100 to it. If I add 12 plus 100, then I will store 112 at the same time as 12. And I will store three in another byte. So I store one byte for this number, one byte for this number. So if I have here minus 20, I add 100 minus 20 plus 100, then I will add, I store 80. So it's still possible. But I'm trying to show you that I want to store large numbers and the small numbers in the computer. So I started by this image to give you some idea. But I will use binary numbers at the end. And if I want to store minus 3 times 10 to the power 12, then for this minus, I need one byte. Okay, so you got the idea that I will need to store the power. And this is what we are going to do actually. What we are going to do here is we will store the number. This is for single precision floating point binary number. I need one bit for the sign. And I need to store E. This is E. This is the number. This is the binary number, big number. So I will represent it as one point something, multiplied by 2 to the power something. In this case, it's 2 to the power 12 because I have 1, 2, 3, 4, 5, 6, 7, 8, 12. That's what this is. I don't need to store 1 because 1 is always there. So I need to store the power. I need to store this number. And in order to store also small numbers, as I explained a minute ago, I will add 1, 2, 3, 7 to the number. So again, this number, I want to store it in the computer. So I'm going to store the power. I'm going to store this number. But I'm going to store 12 with 157 because if this is minus 12, then I will add minus 12 with 157. So I will still have the number because we don't have the numbers in the computer. We store it like when we talk about the tooth component. This was a negative number. Good. And if I want to get the original number back, I will subtract the 127. Okay? So it will end up that to store the number, this number, positive? Yes. So I will see. How many bits I have here? 32 bits. I have 32 bits. What is E? This is 12 plus 127. So it is 139, which is this number. This is 139. Why? Why quickly? Why this is 139? This one is 126. 128. 2, 4, 8, 16, 72, 64, 128. I have 128 plus 8 plus 3. I have 128 plus 13. 128 plus 13 is 139. Good. So I will store 139 in the E. This is 0. What is F? F is this number without 1 because I don't need to store 1. I know that this is 1. 0, 1, 1, 0, 1, 0, 1, 1, 0, 1. And then I know that that is the number. Questions? So as you can see here, I stored my number. And if I give you this number and I ask you the original number, what do you do? You know that this E is the original number, but we added 127. So I will subtract 127 from this number. What do I get? 127 from the 179, I will get the 127. And you know that this is going to be the last one. And I will find what is this number. And I will put this F here. And then I can get the original number. So given this number converted into the same floating point, yes, we can. We can. One bit for the sign, 8 bits for E, 23 bits for F. So you can store small numbers and you can store very large numbers. Of course, you expect that the 64 bit will be better than 32 bits. And 128 bit will be better. But here it is in the method. And I want you to memorize the method itself. The method, note, not exactly what we are doing. The method is we use one byte for E or two bytes for E, three bytes for F, one bit for the sign. But am I going to ask you a question in the final exam to convert number to the floating point? No. Unless I give you the method. Unless I give you this method. So I don't want you to fall with a lot of memorization. So don't even memorize. Can I ask you this question in the midterm exam? Oops, yes. Midterm exam is the big home exam. So you have the book. You can go for the method and the other method. Can I ask you a question about my lab assignment? Yes. Because again you have the book and you can look for the method and go from binary to the floating point or from the floating point representation to the original number. So if I give you the number, it's equal to minus one to the power of S. If S is zero, then the number is positive. This is one. The number is negative. Here we have one plus F, two to the power of E, and subtract the one hundred and fifty cent that you added in the middle line. Questions? So if I give you the number and look at it in the binary, find how many digits. Then put one point, one, one, one, one, one, one, times, this is about 14, real 14 digits, one point, 14 digits. You add 157 to the 14 and then this is your E. This is your E. And this number is here. Starting from a thousand points. Okay. Now back to our tools complement. I remember that we addressed overflow. Overflow means the result is not correct. When the result is going to be not correct, this bit, this last bit is assigned bit. When this is zero, the number is positive. So suppose that you add two positive numbers and you find the assigned bit changed. Like in this case, you add this number, 155 plus 58, what did you get? Negative number. Because this bit is for negative. Then you would say, yeah, overflow. You will learn in this course how to design a circuit, very simple circuit, that when this is zero, this is zero and this is one. Because this has to be the same sign. If this is one, this is one and this is zero, they are all. So if you add two negative numbers or two positive numbers, then there is a possibility of overflow. But if you add positive number, the last, the tools complement of 24, in this case means like you subtract the number, then you will never get overflow. Because you are, originally, if you are, you have different signs, then there is no overflow. 16 plus minus 24, how do I get this minus 24? You write 24 and then you find the ones complement and then you add one. Then you do get the tools complement. This is the tools complement of 24. So this operation is 16 minus 24. The result is negative 8, which is correct? Yes? So if you are doing plus negative 24, you just do 24 binary number and then put an extra one in front? No, you have to get the tools complement. Let me do it in between. 16 minus 24. 16 minus 24. How do I do that? 16 is 1, 0, 0, 0, this is 8, this is 16. And I'm using 8 bits, so this is 8 bits. Right? What is 24? 24 is 16 plus 8, right? 1, 0, 1, 0, 0, 0, let me see, this is 8, this is 0. What is this number? This is 8 plus 16 equals 24. The way that I get the tools complement is I change, I have to use the right number of bits. I change 0 into 1, 1, 1, 0, 0, 1, 1, 1. What is this number? This is the 1's complement. I add 1, then I get the tools complement. 1 plus 1 is 0, 1 plus 1 is 0, 1 plus 1 is 0, and this is 0, 1, 1, 1. What is this number? This is the tools complement of 24. Questions? Yes? How do you know what the right number of bits is? No, it will be given. So, give it 8 bits, then use 8 bits. Give it 16 bits, then use 16 bits. But we will use 8 bits, okay? I'm going to talk about this very soon. So, this is why I said I'm not going to say this is 16 bits. No, I have to go to the 3-0's, okay? Now, 16 represented in tools complement, represented in 8 bits, 8 bits, this is 16. This is minus 24. So, this is what we say the tools complement of 24. Subtraction is addition to the tools complement. So, this is 16. This is tools complement of 64. Then we add. We already have adders. We get the adders. We get the adders, and we have another circuit that does the tools complement. So, addition is actually going to use this approximation for us. 0 plus 0 is 0, 0, 0, 1, 1, 1, 1, 1. So, this is the result. How about this thing? Do I have this thing? Correct. This is, what is this number? This is negative. Yeah. If I have a negative number, that means that it is in the tools complement format. How to complement it to the original number? The way that I do it, but the book has different way, and you should know most ways. The book, both here, 2 to the power negative number, but what I'm going to do is, I know that this is the tools complement, right? Then what is the last thing that we did for the tools complement? We added 1. I'm going to subtract the 1. So, if I subtract 1 from this number, we will have here 1, 1, 1, 0, 1, 1, 1, 1, right? I subtracted 1 from this number. If I add 1, then this would be 0, 0, 0, 1, 1, 1, 1, right? I subtracted 1. Why? It's easier. And then I changed the amount into 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0. What is this number? 8. Okay. So, the number that was given here is negative. Right? I do it this way. You do it, you know, if I'm placed right, step right. But we know that this number is negative. Why? Because this bit is for the negative. Okay? Questions? So, we can do subtractions by using the tools complement. If I wanted to represent minus 5, then I have to give a minus 5, a tools complement of 5, plus the tools complement of 9 to do minus 5, minus 9. And then I do it carefully. I will get minus 14, and I will check the number here. And when I do the addition, I'll just get this guy. Okay. You want to verify that this is minus 14. So, I'm going to do it the way I did it today. Subtract one, and the change it into one, and then we'll do the procedures. When the problem will happen? The problem will happen over flow if both of them have the same sign, and the result is different sign. Then this is obviously a problem. Now question, but I think he solved the question. How can I improve my system? I can improve my system if instead of using bytes, I use two bytes. If I use two bytes, then the sign will be here. Then there's no overflow in this case. Why? Because I spent money, and instead of using one byte, I'm using two bytes. Three bytes. Four bytes. Then I will present the overflow. Questions? What is multiplication? How did we do the multiplication? In the December, if I have the 7 times 1 is 7, 7 times 3 is 1, 1, 3, and then I add. So I multiply and shift, and I add. And this is what I will do. 1, 0, 1. Say times 1, 0, 1. 1 times 1 is 1, 0, 1. 0 times 1 is 0, 0, 0. 1 times 1 is 1, 0, 1, so easy. I multiply and shift. Multiply and shift. And then I add. 1, 0, 1 plus 1, 0, 1, 1. What is this number? 9 plus 16, 25. This is 5. This is 5. 5 times 5 is 25. So multiplication is done the same way as we did for the December. We multiply, we shift, and I add. Subtraction we add to the two's component. What is left is the division. And we can do the division the same way that we did for December. So what I have here, 1, 0, 1, 0, divided by 1, 0, 1. So this would be 1, 0, 1, 0, divided by 1, 0, 1 is 0. So that means that 10 divided by 5 is equal to. So we can have 1, 0, 0, 1. So this is 9 plus 16. 1, 0, 1. 1 times 1, 0, 1 is 1, 0, 1. When I subtract, I will get 1. And then 0, 1. 1, 0, 1 divided by 1, 0, 1. When I got a 0 and I divide it to be 0, and I got a 1, I divide it as 1. Similar to what we do in the division in the case of the December. So this is 25 divided by 5 is 5. Okay. Last time I mentioned something about the ratio that I talked about in this group as well. So I talked about if I have 0, 1, 0, 1, 0, 1, 0, to infinity, there is a thread that when you share in binary, you can multiply by 2. So how many shapes need to be here? 2. So I have 2 times 2, this equal. I do 2 shapes. 1, 0, 1, 0, 1, 0. So if I subtract this part from this part, you end up having 1, 0. And for this minus this, this for this minus this is 3. This is in binary. Then S equal this is 2, 2 over 3. Right? But did I mention that also this is of course correct if I'm talking about say octa, 3, 5. 3, 5. 3, 5. But this is given as octa. Octa, the shift is multiplied by 8. How many shift I need? 2. So 8 times 8 equal 3, 5. 3, 5, 3, 5, 3, 5. So this is 64. Minus 1 equal 63. And this series now is gone. I have 3, 5. The raise is octa, 8. So S equal 3, 5. This 8 means 3 times e to the power of 1 plus 5 times e to the power of 0. 3 times 8 is 24, 24 plus 5 is 29. Divide it by 15 and then you get 4 triangles. Get 4 triangles. Suppose that you decided to say I am confused, I want to go to binary number. 3, 5 means what is 3, 5? 3 in 3 bits will be 1, 1, 0. 5 is 1, 0, 1. Then 0, 1, 1, 1, 0, 1. Right? That's all. How many shift I need to do so the button will be moved? 6. 6 shifts. Here I needed 2 shifts. For each 3 shifts is like 8. 2 times 2 times 2 times 2 times 2. 6 times 2 times 2 times 2, 2 to the power of 6. Yes? Equal? Oops. So I needed 2 to the power of 6. What is 2 to the power of 6? 64. Is this the same? Yeah? 64. And here I will end up having 0, 1, 1, 1, 0, 1. Subtract 1. This equals this number, right? What is this number in this image? 5 plus 8, 13. 13 plus 16, 29. The same answer? Of course, I have to give the same answer. Questions? Oh, when I give you the answers, in your case you have answers. Select one answer, show the method. Then what is the answer? Obviously, maybe I will write 29 over 64. This is the correct answer, right? But I want to make sure that you know the correct answer. So some students will select 29 over 64, which is wrong. Because you subtracted 64 minus 1S. So be careful when you select the answer. And of course, choose a spell. I sometimes look at your details. But you will submit in the first page your answer. If it is wrong, then it is wrong. If it is correct, I want to make sure that you didn't copy from someone else. So I will look at your details. How random to think it is a clue. With 400, 500 students, I may not look at all the details for all the students. Of course, I will look at the first page. If it is wrong, then it is wrong. If it is correct, then it doesn't mean that it is correct. I will look at the details. So I will look at the first page. If it is correct, I will look at the details. If it is wrong, then it is wrong. I will look at the first page. If it is correct, I will look at the details. And you will have similar things. So in the first page you will summarize your answer. Inside the booklet, show the details. Here are the details. Sometimes the question is so short. No details. Convert the binary number into octaves. You have three, four, three, four, four, four, four. You can do it quickly. There are not that many details. Hexadecimal. What is hexadecimal? Instead of having numbers from zero to nine, which is ten different symbols, we have sixteen symbols. So we use ABCDEF. This is for hexadecimal. What is after F? Zero one. What is after zero one? One one. Two one. Three one. And then F1. And then zero two. One two. Two two. And so on. So if I give you a number and ask you to convert it into hexadecimal, the easiest way is to use four bits for each symbol. So this is seven. This is five. This is eight. This is seven. So you can do it quickly. So you can see here there are not that many steps. I ask you to convert this number into hexadecimal. You just show that. And this is the answer. And that's it. But some students, they may convert the number into decimals. And then convert the decimals into hexadecimal. That's fine. Fine. We are just doing the extra work. But you can do that as well. So that's the answer. Okay. If I give you the hexadecimal and convert it into binary, no problem at all. The problem is, the mistake that you may do is, you see this four, then you got one zero zero. And then A. A is zero one zero one. What is the mistake here? Oh, yes. Yeah. Yes. Yes. You have to use four bits. Four bits. Four bits. Yes. Four bits for the hexadecimal. No, I'm not talking about eight bits now. Four bits for each hexadecimal. So your friend said you forgot to put zero here. Okay. And this zero is zero zero zero zero. And then one is one. This is the answer. Okay. So suppose that I wrote here instead of four zeros, like I wrote. And then this zero, if I wrote three zeros, then the answer is wrong. You'll get zero. I will give you credit. So the answer is zero zero one zero. Four bits for each hexadecimal. A zero one zero one. Zero zero zero zero. One. If you wrote one zero zero, it's correct. If you just wrote one, it's correct. This is your question. When I just talk, right? But the question will be very clear. What about hexadecimal? Two decimal. One C. This is one. This is C. So it is four plus three plus six K, which is 28. So one way to do it is when I look at the equivalent binary number, I can quickly find the weight and find the answer. But also there is another way to do it. Another way to do it for one C. The general answer that we talked about was the weight. This is one times 16 to the power one plus C times 16 to the power zero. When we talk about A, B, C, A is 10. B is 11. C is 12. So I have here 12 plus 16. 12 plus 16 is 28. So I get the same answer. So in general, I can use the weight method. Weight method means octa- one zero. Two zero, one, two. Two to the power minus one. Two to the power minus two. It was about minus one. It was about minus two by two to the power zero to the power of one to the power two To the right three To the lower minus one to the lower minus two This is 10 to the power Zero 10 to the power one So I accept this 16 to the power zero 16 to the power one The one that I like and you don't like this seven Seven to the power zero seven to the power one seven to the power two because this is six seven to the power minus one So regardless any of these you use the same method But sometimes I ask is this weird things that they have to the basis seven and suppose that I give you this number Three six this seven and find the equivalent decimal number easy question How? three to the power three Seven to the power One plus six and seven to the power zero so 21 plus six 27 days is Then you get the four credits. Why do you understand that? But for some people what is this seven? That you understand this is Yes Tell me what do we know how to count? It is almost like if you if you have zero one two and Then here that you reach it. What is not enough? I'm counting now. This is your question What is the number Your one the number is not is not That this is your question So this is always this is what we didn't do in any way of company Okay, so what's the basis speed? Okay, zero one two You'll say what is the number? Zero one actually when I met you your question is should I say one zero or I say zero one? So this is zero one and then one and then two one Okay, and when we talk about the ways The way it is always This is two is over zero two to the power one two to the power two two to the power three So this is the way, okay Convert from hexadecimal to this So one way as I said to do it he times 16 to the power one plus five times it's easy about Questions When we convert from this image to hexadecimal How do you do it? You may say oh, okay, I'm going to divide by two I will convert it to binary. Okay, and after it converts the number into binary You can take four heads for this for this and the formula is that hexadecimal But faster one And the formula is that hexadecimal But faster one is instead of dividing by two dividing by 16 And then You take this one converted into A or B or C or whatever Equivalent so in this case it is 40 divided by 16 2.5 convert this point five by multiplying by 16 It and finally you have to divide by 16 Most significant is this one to You want to check the answer because you don't want to lose this easy question Because what is the answer I may give to you is A 8 2 The correct answer will be to Yes If I ask you to convert I Didn't force you right and I will give you one of the answer answers Then you are free to do any any message Like for example you can come you can come to this by me. You may say I'm going to convert it to binary To answers correct, right? I want to add that you don't want to lose the credit because if you write He is to if you mess up with this significant digit You get here right so at this stage I want you to do backward to see So this is 2 times 16 to the world To write plus 8 times 16 to the world 1 plus 10 Then you will see the other original number Good but if you mix a with 2 you will get a huge number And the remember that you example have a lot of choice so you have a Good chance to get full credit Why because you would be able to find the stick quickly when you spend a few seconds to verify the answer And you have to not find more than enough time to put the question again and again I got exam in the middle exam of course you can verify the answer by the front end Because I'm not going to look at See really can sleeping as I Know some time the first week talk about it if you verify the answer you can chat in the teeth, okay? You have to give it a why not why not you want to verify the answer, but use it right? Because also should be the key sometimes give wrong answers But you shouldn't Why because it is exam You shouldn't talk with someone But if you don't with resources cool calculator Google book For the assignments I have To learn from each other For the assignment exams But you can do the resources all the resources find an exam no resources Addition when you know addition you can't convert is a number Suppose that you convert the number into this Correct because I didn't tell you don't use this method Or you converted into binary Exadimension each letter for this What is it? Because you are familiar with binary numbers so you converted into binary the user addition and then you can bet it back into exodus But for the exodus number one I want to remind you that If this is this is seven plus eight is Five one or fifteen what is seven plus eight? If I take three from the eight to make it ten what is left? Fine then it is five Ten point one So what does I have here? If Plus three Exadiscent Then I will take one Right and what is that is to then this would be to work right This is 15 right 15 plus 3 is 18 right so in this is this is What is this number what is this result 16 times 1 times 16 One which is 16 plus two times 16 to the power 0 18 so this correct right now if I have if plus B I Need one from F to make it 16 right You have one here, and I took one from B Then it is E so the result is one A or E1 This is the result yeah, what would be five answer. This is 15 B is 11 So the result here is 26 here. This is 16 Plus ten The same answer 36 You see I always will find the answer to make sure that I understand because we find the answer will take seconds It takes few seconds So you are you will make sure that the answer is correct Of course for some problems the answer is correct and it could be three plus six is nine Two plus one is three and the basis is 16 And that is correct. All you will come to have a four plus B then One plus B is C another one Is B another one is E another one is F for F Yeah, two plus eight is eight Okay, so you do it slowly and you will not go any straight from the right a lot of examples here the same that I want to make sure that you will remember also is C plus F I think one from C to become B then I have one here and then we add and subtract from A to reach one here then one is B of course you can convert this into binary number and add the two binary numbers And after you get the result you convert it into hexadecimal Yes Oh, no, no, you do it slow I said the answer is here. The answer here is I want to reach 16 so what did I do? No, I am talking about this one. The other one you will do it at home Okay, because it is the same thing Okay, let me know what question you want me to go on the case A or B or C or D? B? So you want to go to D? So if I add these two numbers, this is your question, right? C plus F I need one from here to make this go to the other So this becomes D and I have one one plus D plus A Right one plus D plus A Correct? What is one plus D? E then I have E plus E So you take one from there? Yes, then this will be the same as F And here nine, right? And I take one So this will be one E. So you do it slow Okay Thank you for the question Questions so there are no questions here This is how we do it and also one way to do it is binary number And at the end verify the answer because if you in the exam if you will give one nine B How to verify the answer You convert this one into decimal this one into decimal that is not into decimal What is decimal one times 16 to the power 2 plus 8 times 16 to the power No, this is 16 to the power 2, 8 times 16 to the power 1 plus B which is 11 times 16 to the power 0 Okay It is it is not difficult But you have to be very careful because your answer is either correct or wrong When we do the subtraction convert to the number Into binary and the case that is complicated So we don't have subtraction. We have the tools compliment of the number This is excellent number very easy to come into binary numbers To visit the binary number get the once compliment the truth compliments and then become the addition to the Now The number how many that's three three this zero one two three four five six seven A different samples for the open numbers Interface Again the Mr. V bitter Suppose that I want to convert this decimal number into an octal number. I can divide by 2 actually to convert it into a binary number and then combine 3 bits into one octal number. Or I can divide by 8. Here I divide by 8, 44, 5.5, 5.5 and the score. Then the number is 547. This is the most significant digit. This is the least significant digit. If I give you the number octal and convert it into binary, don't forget the 0. Some students will just use one and then they will get one. That's it. This is wrong. You need to use 3 bits for each octal number. And you are going to get credit for finding this mistake. This is to make it clear. You will not forget the 0 if needed. By way of octal, easy. This is 6, 5 or say 5, 6 is better. You want to verify the answer, 6. If you want to verify the answer by converting this number into this number, this will be 5 plus 16 plus 32. And this is 6 and 8 is about 1 plus 5 and 8 is about 0. Now I'm going to talk about something different. First of all, I don't want you to get confused. This is called the BCD, binary coded decimal. So I'm using 4 bits for each disempowering digit. Good. What does this mean? This means that 1, 0 doesn't exist. Why? All my numbers will be between 0 and 9. Why? Because this is BCD. This has nothing to do with what we have said so far. This is a representation for the number in BCD, binary coded decimal. Good. What kind of question we can have here? Convert each of the following decimal numbers to BCD. 35. Am I going to have the result by dividing by 2? No, this is if I ask you to convert into binary numbers. Now I'm asking you to do BCD. BCD means for the 5, you have 4 bits. For 3, you have 4 bits. So I have here 4 bits for the 5. I have here 4 bits for the 3. Okay? So look at the question. Convert the number. This is the number into BCD. Questions? This is BCD. Convert each of the following... This is now BCD. This is already BCD. And I want you to get the number, the decimal number. Convert each of the following BCD codes, so it is already coded, into BCD. So this is D6, right? 1, 0, 0, 0 is this. 0, 1, 1, 0, 6. Now, if I add 2 BCD numbers, I'm doing addition now. 2 BCD numbers. BCD means I'm using 4 bits. So I have to be very clear with you. I'm using 4 bits. I'm using 8 bits. I'm using 13 points. So here I'm using BCD. And what is the question? 8. And you add these, I can. I will add. What is the problem? The problem is when I add these 2 numbers, this is 9. Plus 4. This is the result. The result is greater than 9. Then this is need to be correct. In some of my final exams, I asked the students to weld a circuit to do the correction. So in future, you will know how to weld the circuit. To correct the solution, if the solution is out of the range from 0 to 9. This case is out of the range. It is greater than 9. So what is the correction? The correction method is if it is greater than 9, add 6. 9 plus 4. Greater than 9. This number is greater than 9. What is this number? 1101. It is 5 plus 13. Greater than 9. Add 6. Then you correct it. You add 6, you correct it. Questions? I will ask a question for Abomas. Let's see who is the first student to answer. Why the correction by adding the number 6? Why 6? Why not 7? Here is my answer. Yes? Yes? So we have to go from 9 to 15. 15? Correct. So 7 is greater than 8. Today. So you said when we count 0, 1, 2, 3, 4, 5, 6, 7, 9. And then? A. B. C. D. E. F. Those 6 counts. You said the 4 bits will stand 16 different counts. When we use the decimal, we use 10 counts. So there is a difference between 16 counts and 10 counts 6. And I want to go to the next one. So this is why I corrected by adding 6. Because I will not have A or B or C or D. I will just move this one here. So I need to add 6 to the number. Okay? Good. Okay. So here I have gray code. Different code. This is binary. You are familiar with binary. Binary numbers 0, 1, 2, 3. But you can see here the gray code for decimal 0 is 0, but for 1 is 1. For 2 is not 1, 0. You can see this code looks like what is going on here. I have gray code. And I have a gray code for 3. I have a gray code for 4. Can you see something special about gray code? What is going on here? When I go from here to here, from here to here, can you see something special? Yes, I can. It's like 2, 1, 2, 3, 4. Who is talking? Did you listen to that? No? Okay. Then let somebody else. Let me see your answers. Yes? Huh? Yes? No, I don't have one. It was 1, 0, I had 1, 21, 1. If you raise your hand, I will raise it too. I will raise it too. No, I won't. Yes? 2 and 3. 2 and 3, huh? Like there is something happening from here to here. And the similar thing happening from here to here. And from here to here, and from here to here. What is this thing? From here to here. From here to here. From here to here. Yes? Yes? 0 instead of 1. What he wants to say is, there is one big change. When I go from here to here, 1 becomes 0, 1 big change. When I go from here to here, this one becomes 0, 1 big change. So in the whole pattern, there is one big change. You try it, I will give you a try. Okay? He was able to see, there is one 0 change. But the answer is, there is a change in 1 bit. Is this useful? Yes, sir. In some applications. In some applications, we want to do one bit change. I want to start from here. I stopped at this point in the other lecture, but I told them also, there is a way to go from binary to gray. And from gray to binary. How? This is a binary number. You put this number here, 1 plus 1 is 0. I will carry 1, forget about carrying. 1 plus 0 is 1. 0 plus 0 is 0. 0 plus 0 is 0. 0 plus 1 is 1. 1 plus 1 is 0. 1 plus 0 is 1. And to go from gray to gray, this is gray. And we want the binary number. 1 plus 0 is 1. 1 plus 1 is 0. 0 plus 0 is 0. 0 plus 1 is 1. And so on. And then finally, this is the ASCII code. It's a completely loose. For E, B, C, E, C. For every setting, this is what is called the ASCII code. Still asking me, why I'm going to write ASCII code. So next time, I'm going to start from here again. Because I still have a script to go through this again. So I will do consistent. I will do this. That's it for today.